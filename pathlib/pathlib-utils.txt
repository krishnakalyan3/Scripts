#!/usr/bin/env python3

from pathlib import Path
import cv2
from shutil import copyfile
from pathlib import Path
from PIL import Image
import os
from tqdm import tqdm


def _get_image_size(image_path):
    img = cv2.imread(image_path)
    img_shape = img.shape
    return img_shape[0:2]


# Get Image Dim
def _get_file_dims(image_dir, sub_dir='train'):
    path = Path(image_dir, sub_dir)
    sub = [i for i in path.iterdir()]
    img_dim = [_get_image_size(str(i)) for i in sub]

    return img_dim


# Get Image Names
def _get_image_name(image_dir, sub_dir='train'):
    path = Path(image_dir, sub_dir)
    sub = [i for i in path.iterdir()]
    img_name = [i.name for i in sub]
    return img_name


# Get Folder distribution
def _get_classes(path, sub_dir='train'):
    # data = _get_classes(src)
    # plt.bar(list(data.keys()), data.values(), color='g')
    # plt.show()

    raw_classes = {}
    path = Path(path, sub_dir)
    sub_path = [i for i in path.iterdir()]

    for path in sub_path:
        folder_name = (path.name)
        raw_classes[folder_name] = len(list(path.iterdir()))

    return raw_classes


def _move_files(mages, src, dest, class_n):
    for i in mages:
        src_n = Path(src, i)
        dest_n = Path(dest, class_n, i)
        try:
            copyfile(src_n, dest_n)
        except:
            pass


def deploy(path, v2='data-v2'):
    src = Path(path)
    sub_folders = ([x for x in src.iterdir() if x.is_dir()])

    # Setup Folders
    # Get Images path and resize
    for i in sub_folders:
        print('Processing {}'.format(i.name))
        v2_dir_name = Path(src.parents[0], v2, i.name)
        create_dir(v2_dir_name)
        for child in tqdm(i.iterdir()):
            img_resize(child, v2_dir_name)

def img_resize(src_img_path, dest_img_path, resize=512, ext='JPEG'):
    file_name = os.path.splitext(Path(src_img_path).name)[0] + '.jpeg'
    img = Image.open(src_img_path)
    img_resize = img.thumbnail([resize, resize], Image.ANTIALIAS)
    img.save(Path(dest_img_path, file_name), ext)


def create_dir(path):
    Path(path).mkdir(parents=True, exist_ok=True)
